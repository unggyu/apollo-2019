{"version":3,"sources":["routes/Detail.js","components/Movie.js","routes/Home.js","components/App.js","apollo.js","index.js"],"names":["GET_MOVIE","gql","Container","styled","div","Column","Title","h1","Subtitle","h4","Description","p","Poster","props","bg","id","useParams","useQuery","variables","loading","data","movie","title","isLiked","language","rating","description_intro","medium_cover_image","TOGGLE_LIKE_MOVIE","useMutation","parseInt","likeMovie","to","onClick","GET_MOVIES","Header","header","h3","Loading","Movies","movies","map","m","Movie","App","exact","path","component","Home","Detail","client","ApolloClient","uri","cache","InMemoryCache","resolvers","Mutation","toggleLikeMovie","_","console","log","myMovie","__typename","modify","identify","fields","cachedName","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a78f9eaf.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport styled from 'styled-components';\r\n\r\nconst GET_MOVIE = gql`\r\n    query getMovie($id: Int!) {\r\n        movie(id: $id) {\r\n            id\r\n            title\r\n            medium_cover_image\r\n            language\r\n            rating\r\n            description_intro\r\n            isLiked @client\r\n        }\r\n        suggestions(id: $id) {\r\n            id\r\n            medium_cover_image\r\n        }\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n    background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    color: white;\r\n`;\r\n\r\nconst Column = styled.div`\r\n    margin-left: 10px;\r\n    width: 50%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 65px;\r\n    margin-bottom: 15px;\r\n`;\r\n\r\nconst Subtitle = styled.h4`\r\n    font-size: 35px;\r\n    margin-bottom: 10px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n    font-size: 28px;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n    width: 25%;\r\n    height: 60%;\r\n    background-color: transparent;\r\n    background-image: url(${props => props.bg});\r\n    background-size: cover;\r\n    background-position: center center;\r\n`;\r\n\r\nexport default () => {\r\n    const { id } = useParams();\r\n    const { loading, data } = useQuery(GET_MOVIE, {\r\n        variables: { id: +id }\r\n    });\r\n    return (\r\n        <Container>\r\n            <Column>\r\n                <Title>{loading ? \"Loading...\" : `${data.movie.title} ${data.movie.isLiked ? \"ðŸ’–\" : \"ðŸ˜ž\"}`}</Title>\r\n                <Subtitle>{data?.movie?.language} Â· {data?.movie?.rating}</Subtitle>\r\n                <Description>{data?.movie?.description_intro}</Description>\r\n            </Column>\r\n            <Poster bg={data?.movie?.medium_cover_image}></Poster>\r\n        </Container>\r\n    )\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { gql } from 'apollo-boost';\r\nimport { useMutation } from '@apollo/react-hooks';\r\n\r\nconst TOGGLE_LIKE_MOVIE = gql`\r\n    mutation toggleLikeMovie($id: Int!, $isLiked: Boolean!) {\r\n        toggleLikeMovie(id: $id, isLiked: $isLiked) @client\r\n    }\r\n`\r\n\r\nconst Container = styled.div`\r\n    height: 400px;\r\n    border-radius: 7px;\r\n    width: 100%;\r\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n    background-color: transparent;\r\n`;\r\n\r\nconst Poster = styled.div`\r\n    background-image: url(${props => props.bg});\r\n    height: 100%;\r\n    width: 100%;\r\n    background-size: cover;\r\n    background-position: center center;\r\n    border-radius: 7px;\r\n`;\r\n\r\nexport default ({ id, bg, isLiked }) => {\r\n    const [likeMovie] = useMutation(TOGGLE_LIKE_MOVIE, {\r\n        variables: { id: parseInt(id), isLiked }\r\n    });\r\n    return (\r\n        <Container>\r\n            <Link to={`/${id}`}>\r\n                <Poster bg={bg} />\r\n            </Link>\r\n            <button onClick={likeMovie}>{isLiked ? \"Unlike\" : \"Like\"}</button>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport Movie from '../components/Movie';\r\nimport styled from 'styled-components';\r\n\r\nconst GET_MOVIES = gql`\r\n    {\r\n        movies {\r\n            id\r\n            medium_cover_image\r\n            isLiked @client\r\n        }\r\n    }\r\n`;\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    background-image: linear-gradient(-45deg, #d754ab, #fd723a);\r\n    height: 45vh;\r\n    color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 60px;\r\n    font-weight: 600;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nconst Subtitle = styled.h3`\r\n    font-size: 35px;\r\n`;\r\n\r\nconst Loading = styled.div`\r\n    font-size: 18px;\r\n    opacity: 0.5;\r\n    font-weight: 500;\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst Movies = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    grid-gap: 25px;\r\n    width: 60%;\r\n    position: relative;\r\n    top: -50px;\r\n`;\r\n\r\nexport default () => {\r\n    const { loading, data } = useQuery(GET_MOVIES);\r\n    return (\r\n        <Container>\r\n            <Header>\r\n                <Title>Apollo 2020</Title>\r\n                <Subtitle>I love GraphQL</Subtitle>\r\n            </Header>\r\n            {loading && <Loading>Loading...</Loading>}\r\n            <Movies>\r\n                {data?.movies?.map(m => (\r\n                    <Movie key={m.id} id={m.id} isLiked={m.isLiked} bg={m.medium_cover_image} />\r\n                ))}\r\n            </Movies>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Detail from '../routes/Detail';\r\nimport Home from '../routes/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/:id\" component={Detail} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\r\n\r\nconst client = new ApolloClient({ \r\n    uri: \"https://movieql.unggyu.vercel.app/\",\r\n    cache: new InMemoryCache(),\r\n    resolvers: {\r\n        Movie: {\r\n            isLiked: () => false\r\n        },\r\n        Mutation: {\r\n            toggleLikeMovie: (_, { id, isLiked }, { cache }) => {\r\n                console.log(isLiked);\r\n                const myMovie = {\r\n                    __typename: 'Movie',\r\n                    id: `${id}`,\r\n                    isLiked: `${isLiked}`,\r\n                };\r\n                cache.modify({\r\n                    id: cache.identify(myMovie),\r\n                    fields: {\r\n                        isLiked(cachedName) {\r\n                            return !isLiked;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport default client;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport client from './apollo';\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}